///////////////////////////////////////////////////////////////////////////////
// Physics Effects パッケージ

===============================================================================
== 概要

Physics Effectsは剛体シミュレーションを構築するためのローレベルなAPIを提供する
ライブラリです。そのため、バッファの管理やシミュレーションパイプラインの構築は
アプリケーション側で柔軟に実装することができるしくみとなっています。

ハイレベルAPIは、パイプラインを固定し、バッファ管理やローレベルAPIの呼び出しを
隠蔽することで、より平易に剛体シミュレーションを扱うためのAPIを提供します。

===============================================================================
== セットアップ

・サンプル用Visual Studioソリューションファイル
physics_effects/sample/api_physics_effects/
	physics_effects_samples.oss_vs2008.sln
	physics_effects_samples.oss_vs2010.sln

・ハイレベルAPI用Visual Studioソリューションファイル
physics_effects/sample/api_physics_effects_high_level/
	tutorial_physics_effects_high_level.windows_vs2008.sln
	tutorial_physics_effects_high_level.windows_vs2010.sln

===============================================================================
== サンプルについて

■physics_effects/sample/api_physics_effects/1_simple
シンプルな剛体シミュレーションパイプラインの構築
安定性よりも高速性を重視したシミュレーションパイプラインです。いくつかのステー
ジを省き、フレーム間でキャッシュされるデータを維持しないことでパイプラインを単
純化し、安定性を犠牲にして高速性を確保しています。剛体のスタッキングや複雑なギ
ミックを使わないシーンに向いているパイプラインです。

■physics_effects/sample/api_physics_effects/2_stable
安定した剛体シミュレーションパイプラインの構築
前フレームの衝突とソルバーの結果をキャッシュし、現フレームの演算に利用すること
により高い安定性を得ることができます。タイムステップを小さく、ソルバーの反復回
数を増やすことでさらに精度を高めることが可能であり、幅広く適応可能な汎用性の高
いパイプラインです。

■physics_effects/sample/api_physics_effects/3_sleep
シミュレーションアイランドを利用したスリープ機構の組み込み
広いワールドを扱うアプリケーションでは、プレイヤーの視界に入る可能性のない領域
の物理演算を止めたいことがよくあります。このような場合には、スリープの仕組みが
役に立ちます。このサンプルでは、ある程度停止している剛体をスリープ状態にして、
演算負荷の高い衝突判定と拘束ソルバーの演算をキャンセルする機能を安定パイプライ
ンに追加しています。

■physics_effects/sample/api_physics_effects/4_motion_type
モーションタイプによる挙動の違い
このサンプルでは剛体に与えることのできるさまざまな振る舞いについて、挙動の違い
を確認することができます。最初のシーンではkPfxMotionTypeKeyframeの振る舞いを持
つ剛体を配置し、フレームごとにアプリケーション側から姿勢を与えます。姿勢の変化
は速度として保持されるため、他の剛体との自然な干渉を再現することが確認できます。
次のシーンでは、kPfxMotionTypeOneWayとkPfxMotionTypeActiveの剛体との違いを確認
できます。kPfxMotionTypeOneWayの剛体は、衝突時にkPfxMotionTypeActiveのように自
分から他剛体へ影響を与えることができません。3 つ目のシーンでは、中央に
kPfxMotionTypeTriggerの振る舞いを持つ剛体が配置されています。トリガ剛体は干渉
チェックにのみ使われ、物理的な挙動を示すことはありません。

■physics_effects/sample/api_physics_effects/5_raycast
レイキャスト
シーンに対してレイキャストを実行するサンプルです。レイは最も始点から近い交差を
検出し、交差点における座標と法線ベクトルを返します。3 つ目のシーンでは、レイに
コンタクトフィルタを指定し、レイが交差する剛体を選別する方法を示します。

■physics_effects/sample/api_physics_effects/6_joint
ジョイント
最初のシーンでは、用意されている基本的なジョイントを紹介し、実際にドラッグする
ことで剛体を動かし、挙動を確認することができます。2 つ目のシーンでは、ゲームで
よく使われるラグドールを再現しています。ラグドールを構成する剛体の各関節には、
逆方向に曲がらないように適切な可動範囲が設定されており、不自然な姿勢にならない
ように調整されています。

■physics_effects/sample/api_physics_effects_high_level
ハイレベルAPI のソースコードを含むサンプルです。Physics Effects ライブラリをベ
ースに単体の物理エンジンとして扱うための汎用的な機能をクラスライブラリにまとめ
ています。APIについてはhigh_level/pfx_rigidbody_world.hを参照してください。

===============================================================================
== アプリケーションへの組み込み

・Physics Effects APIの使用
アプリケーションコードから「physics_effects/include/physics_effects.h」をイン
クルードしてください。他の関連するヘッダはphysics_effects.hから参照されます。
スタティックリンクライブラリlib/libScePhysicsEffects.aをプロジェクトにリンクし
てください。

===============================================================================
== ビルド環境

OS : Windows XP以降
CPU : 1GHz以上
VGA : OpenGL対応ビデオカード
Compiler : Visual Studio 2008,2010 (Express Edition可)
